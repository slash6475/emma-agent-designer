@Name@ @version@
@copyright@

Things to be implemented in (far or close) future, 
scheduled/planned/envisioned for future JFern releases.


Close future (for 4.0):

[ ] Implement dynamic net instance changes
[ ] Implement dynamic net viewer updating after the net structure has changed
[ ] Improve memory management
[ ] Implement new more efficient algorithm for unification and occurrence set


[ ] lay-outs should have a version nr, so that old layouts are not loaded automatically for a 
	new net with all the problems that that gives

[ ] Improve or possibly make this more efficient:
  (+) Change the bytecode as well if the annotations (text) change
      (the whole net is re-synced on request)



Far future (for 5.0 and later):

[ ] Create a framework for pluggable inscription languages.
    Different languages (JPython, BeanShell, custom languages) 
    could be used then to annotate JFern CPN.





Older list (possibly for 3.1.0).  
Note, some issues need to be resolved soon!



[X] Provide support for hierarchical nets, XML serialization for
    hierarchical nets, and JFern Toolbox GUI support for 
    hierarchical nets visualization.
[X] Provide better, robust and safe layout infrastructure: layouts 
    should be saved with all additional figures, etc.

work in progress, to be done:
  (X) layout must contain all the not-netelements figures as well
  (x) layout serialization must be made more robust and safe 
  (x) Net serialization must work between JFern releases
 
  (X) XML serialization of subnets
  (X) NetGenerator to accept subnets
  (o) Nice Layout for generated XML-files (better humanreadable: hard returns and proper indents)

bugs and issues to be fix soon:
  (X) IDs should be read from XML, not generated new all the time
  (X) the re-syncing of the net handle must be made nicer
  (X) layout must be maintained when re-syncing net handle
  (X) The extra arc bendpoints are not stored in load/save layout, 
        as well as all figures except place&transitionfigure
  (X) The petri-net gets not selected as the one you are working 
        on when you select the window but only when you select a part 
	of the petri-net IN the window. So if i change a window and 
	do a resync, then the wrong net gets resync'ed.. !
  ( ) if you edit a declaration of a net element and you type some 
        blank lines, then the blank lines are removed after resync.nethandle
  (+) some of the invisible things should not be placed directly in the center 
        of a parent figure, because it is a bit confusing when invisible figures 
        got selected instead of a parent figure selection.

  ( ) (not implemented yet)
      The methods var(int, class) and var(string, class) in CpnContext are not working properly!
	the tokens selected by var(int, class) are never selected, and for (string,
	class) the find bindings method does never check if the class is ok, so your
	variable can be of any class if you get it back.


  ( ) JRio apart from figurechanged, a figure data changed event should be introduced. 
        Use if id's change of connection points in connectionfigure, or 
	if annotation changes in annotationfigure





Legend:
.   started
o   busy, work in progress
x   almost done, testing 
X   done
+   done in a different way / worksforme

