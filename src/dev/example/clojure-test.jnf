<?xml version="1.0" encoding="UTF-8"?><net cpnlang="clojure" id="id4" type="hlnet"><annotation id="a31" type="name"><text>Untitled2</text></annotation><layout file="clojure-test.jlf"/><place id="id7"><annotation id="a32" type="name"><text>_id7</text></annotation></place><place id="id8"><annotation id="a33" type="name"><text>_id8</text></annotation></place><transition id="id6"><annotation id="a34" type="name"><text>_id6</text></annotation><annotation id="a35" type="action"><text>(println x)</text></annotation></transition><arc id="id9" source="id8" target="id6" type="ordinary"><annotation id="a36" type="name"><text>_id9</text></annotation><annotation id="a37" type="expression"><text>var("x");</text></annotation><annotation id="a38" type="guard"><text>(and (number? x) (&gt; x 10))</text></annotation></arc><arc id="id10" source="id6" target="id7" type="ordinary"><annotation id="a39" type="name"><text>_id10</text></annotation><annotation id="a40" type="expression"><text>(list x 100)</text></annotation></arc><arc id="id9" source="id8" target="id6" type="ordinary"><annotation id="a41" type="name"><text>_id9</text></annotation><annotation id="a42" type="expression"><text>var("x");</text></annotation><annotation id="a43" type="guard"><text>(and (number? x) (&gt; x 10))</text></annotation></arc><arc id="id10" source="id6" target="id7" type="ordinary"><annotation id="a44" type="name"><text>_id10</text></annotation><annotation id="a45" type="expression"><text>(list x 100)</text></annotation></arc></net>